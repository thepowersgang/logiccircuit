
#defunit CPU32ROM_LL
#input $enable, @addr[12], $write, @write_mask[32], @data_in[32]
#output $ready, @data_out[32]

// Size: 128 bytes (32 words)
#array ROM_select	32
@ROM_select = DEMUX{5} $enable, @addr[0:4]

// - Address is in 32-bit words
@data_out[0:31] = AND{32} @ROM_select[0x0000], 0x11131337[0:31]	; OR R1, 0x31337
@data_out[0:31] = AND{32} @ROM_select[0x0001], 0x010FFFFF[0:31]	; MOV R0, 0xFFFFF
@data_out[0:31] = AND{32} @ROM_select[0x0002], 0x21000001[0:31]	; ADD R0, 0x00001
@data_out[0:31] = AND{32} @ROM_select[0x0003], 0x8EFFFFFD[0:31]	; JMP .-3*4
@data_out[0:31] = AND{32} @ROM_select[0x0004], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x0005], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x0006], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x0007], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x0008], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x0009], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000A], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000B], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000C], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000D], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000E], 0x00000000[0:31]	; NOP
@data_out[0:31] = AND{32} @ROM_select[0x000F], 0x8EFFFFFF[0:31]	; JMP .-1*4 (infinite loop)

$ready = DELAY{2} $enable

#endunit

; vim: ft=logiccircuit
