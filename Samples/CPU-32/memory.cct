// 8-bit RISC CPU
// - Memory Bus
// By John Hodge (thePowersGang)
// Designed in LogicCircuit

%include "../memory_bank.cct"

#defunit MEMORY_SPACE
#input $enable, @addr[32], $data_write, @data_input[32]
#output $ready, @data_output[32]

#array ROM_select	16

;#display $enable "Memory Addr" @addr
;#display $is_ROM "ROM Select " @ROM_select
;#display $ready "Memory Out " @data_output

;#display $ready  "Memory Output " @data_output
;#display $is_ROM "ROM 0x000?    " @ROM_select[0] 
;#display $is_ROM "ROM 0x001?    " @ROM_select[1]

// ROM area
//  Reserved range: 0xF000 - 0xFFFF
//  Size: 16 bytes
$is_ROM = AND (DELAY $enable), (NOT   @addr[15]), (NOT   @addr[14]), (NOT   @addr[13]), (NOT   @addr[12])
@ROM_select = DEMUX{4} $is_ROM, (DELAY{2} @addr[0:3])

%macro _ROM_DWORD 2
 %assign i 31
 %rep 32
  %if %2 & 1 << i
@data_output[i] = DELAY @ROM_select[%1/4]
  %endif
  %assign i i-1
 %endrep
%endmacro

// === ROM Contents ===
_ROM_DWORD 0x0000, 0x40FFFFFC	; JMP .+0xFFFFFC (-4)

// 1 delay for DEMUX, 1 for data
$ready = DELAY{2} $is_ROM

#endunit
